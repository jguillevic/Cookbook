//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 
namespace Cookbook.UWP.RecipeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeFilter", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public partial class RecipeFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CookingTimeField;
        
        private Cookbook.UWP.RecipeServiceReference.Cost CostField;
        
        private Cookbook.UWP.RecipeServiceReference.Difficulty DifficultyField;
        
        private Cookbook.UWP.RecipeServiceReference.Feature FeatureField;
        
        private string NameField;
        
        private System.Nullable<int> PreparationTimeField;
        
        private Cookbook.UWP.RecipeServiceReference.RecipeKind RecipeKindField;
        
        private Cookbook.UWP.RecipeServiceReference.Season SeasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CookingTime {
            get {
                return this.CookingTimeField;
            }
            set {
                if ((this.CookingTimeField.Equals(value) != true)) {
                    this.CookingTimeField = value;
                    this.RaisePropertyChanged("CookingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Cost Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Difficulty Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Feature Feature {
            get {
                return this.FeatureField;
            }
            set {
                if ((this.FeatureField.Equals(value) != true)) {
                    this.FeatureField = value;
                    this.RaisePropertyChanged("Feature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PreparationTime {
            get {
                return this.PreparationTimeField;
            }
            set {
                if ((this.PreparationTimeField.Equals(value) != true)) {
                    this.PreparationTimeField = value;
                    this.RaisePropertyChanged("PreparationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.RecipeKind RecipeKind {
            get {
                return this.RecipeKindField;
            }
            set {
                if ((this.RecipeKindField.Equals(value) != true)) {
                    this.RecipeKindField = value;
                    this.RaisePropertyChanged("RecipeKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Season Season {
            get {
                return this.SeasonField;
            }
            set {
                if ((this.SeasonField.Equals(value) != true)) {
                    this.SeasonField = value;
                    this.RaisePropertyChanged("Season");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cost", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public enum Cost : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cheap = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expensive = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Difficulty", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public enum Difficulty : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeryEasy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Easy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Difficult = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VeryDifficult = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feature", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public enum Feature : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vegetarian = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Festive = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeKind", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public enum RecipeKind : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Starter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainCourse = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dessert = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sauce = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drink = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SideDish = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmuseGueule = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sweet = 128,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Season", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public enum Season : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Winter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Spring = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Summer = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Autumn = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Recipe", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public partial class Recipe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CookingTimeField;
        
        private Cookbook.UWP.RecipeServiceReference.Cost CostField;
        
        private string DescriptionField;
        
        private Cookbook.UWP.RecipeServiceReference.Difficulty DifficultyField;
        
        private string ExternalUrlField;
        
        private Cookbook.UWP.RecipeServiceReference.Feature FeatureField;
        
        private System.Guid IdField;
        
        private System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.RecipeIngredient> IngredientsField;
        
        private System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.RecipeInstruction> InstructionsField;
        
        private string NameField;
        
        private int PreparationTimeField;
        
        private Cookbook.UWP.RecipeServiceReference.RecipeKind RecipeKindField;
        
        private Cookbook.UWP.RecipeServiceReference.Season SeasonField;
        
        private System.Nullable<System.Guid> UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CookingTime {
            get {
                return this.CookingTimeField;
            }
            set {
                if ((this.CookingTimeField.Equals(value) != true)) {
                    this.CookingTimeField = value;
                    this.RaisePropertyChanged("CookingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Cost Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Difficulty Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalUrl {
            get {
                return this.ExternalUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalUrlField, value) != true)) {
                    this.ExternalUrlField = value;
                    this.RaisePropertyChanged("ExternalUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Feature Feature {
            get {
                return this.FeatureField;
            }
            set {
                if ((this.FeatureField.Equals(value) != true)) {
                    this.FeatureField = value;
                    this.RaisePropertyChanged("Feature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.RecipeIngredient> Ingredients {
            get {
                return this.IngredientsField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsField, value) != true)) {
                    this.IngredientsField = value;
                    this.RaisePropertyChanged("Ingredients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.RecipeInstruction> Instructions {
            get {
                return this.InstructionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionsField, value) != true)) {
                    this.InstructionsField = value;
                    this.RaisePropertyChanged("Instructions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreparationTime {
            get {
                return this.PreparationTimeField;
            }
            set {
                if ((this.PreparationTimeField.Equals(value) != true)) {
                    this.PreparationTimeField = value;
                    this.RaisePropertyChanged("PreparationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.RecipeKind RecipeKind {
            get {
                return this.RecipeKindField;
            }
            set {
                if ((this.RecipeKindField.Equals(value) != true)) {
                    this.RecipeKindField = value;
                    this.RaisePropertyChanged("RecipeKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cookbook.UWP.RecipeServiceReference.Season Season {
            get {
                return this.SeasonField;
            }
            set {
                if ((this.SeasonField.Equals(value) != true)) {
                    this.SeasonField = value;
                    this.RaisePropertyChanged("Season");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeIngredient", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public partial class RecipeIngredient : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AmountField;
        
        private System.Guid IngredientIdField;
        
        private System.Guid MeasureIdField;
        
        private int OrderField;
        
        private System.Guid RecipeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid IngredientId {
            get {
                return this.IngredientIdField;
            }
            set {
                if ((this.IngredientIdField.Equals(value) != true)) {
                    this.IngredientIdField = value;
                    this.RaisePropertyChanged("IngredientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MeasureId {
            get {
                return this.MeasureIdField;
            }
            set {
                if ((this.MeasureIdField.Equals(value) != true)) {
                    this.MeasureIdField = value;
                    this.RaisePropertyChanged("MeasureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecipeId {
            get {
                return this.RecipeIdField;
            }
            set {
                if ((this.RecipeIdField.Equals(value) != true)) {
                    this.RecipeIdField = value;
                    this.RaisePropertyChanged("RecipeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeInstruction", Namespace="http://schemas.datacontract.org/2004/07/Cookbook.Entity.Recipe")]
    public partial class RecipeInstruction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string InstructionField;
        
        private int OrderField;
        
        private System.Guid RecipeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instruction {
            get {
                return this.InstructionField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionField, value) != true)) {
                    this.InstructionField = value;
                    this.RaisePropertyChanged("Instruction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecipeId {
            get {
                return this.RecipeIdField;
            }
            set {
                if ((this.RecipeIdField.Equals(value) != true)) {
                    this.RecipeIdField = value;
                    this.RaisePropertyChanged("RecipeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RecipeServiceReference.IRecipeService")]
    public interface IRecipeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/Load", ReplyAction="http://tempuri.org/IRecipeService/LoadResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.Recipe>> LoadAsync(Cookbook.UWP.RecipeServiceReference.RecipeFilter recipeFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/Add", ReplyAction="http://tempuri.org/IRecipeService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.Recipe> recipes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/Update", ReplyAction="http://tempuri.org/IRecipeService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.Recipe> recipes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecipeServiceChannel : Cookbook.UWP.RecipeServiceReference.IRecipeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecipeServiceClient : System.ServiceModel.ClientBase<Cookbook.UWP.RecipeServiceReference.IRecipeService>, Cookbook.UWP.RecipeServiceReference.IRecipeService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RecipeServiceClient() : 
                base(RecipeServiceClient.GetDefaultBinding(), RecipeServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IRecipeService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RecipeServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(RecipeServiceClient.GetBindingForEndpoint(endpointConfiguration), RecipeServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RecipeServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RecipeServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RecipeServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RecipeServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RecipeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.Recipe>> LoadAsync(Cookbook.UWP.RecipeServiceReference.RecipeFilter recipeFilter) {
            return base.Channel.LoadAsync(recipeFilter);
        }
        
        public System.Threading.Tasks.Task AddAsync(System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.Recipe> recipes) {
            return base.Channel.AddAsync(recipes);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(System.Collections.Generic.List<Cookbook.UWP.RecipeServiceReference.Recipe> recipes) {
            return base.Channel.UpdateAsync(recipes);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRecipeService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRecipeService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:58204/Recipe/RecipeService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RecipeServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRecipeService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RecipeServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRecipeService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IRecipeService,
        }
    }
}
